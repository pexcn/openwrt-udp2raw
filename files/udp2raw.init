#!/bin/sh /etc/rc.common
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

START=80

USE_PROCD=1
#PROCD_DEBUG=1

append_param() {
	local section="$1"
	local option="$2"
	local switch="$3"
	local default="$4"
	local _loctmp
	config_get _loctmp "$section" "$option"
	[ -n "$_loctmp" -o -n "$default" ] || return 0
	procd_append_param command "$switch" "${_loctmp:-$default}"
}

append_param_if_not_eq() {
	local section="$1"
	local option="$2"
	local switch="$3"
	local compare="$4"
	local _loctmp
	config_get _loctmp "$section" "$option"
	[ -n "$_loctmp" ] || return 0
	[ "$_loctmp" != "$compare" ] && {
		procd_append_param command "$switch" "$_loctmp"
	}
}

get_value() {
	local section="$1"
	local option="$2"
	local default="$3"
	local _loctmp
	config_get _loctmp "$section" "$option"
	[ -n "$_loctmp" -o -n "$default" ] || return 0
	echo "${_loctmp:-$default}"
}

start_udp2raw() {
	[ "$(get_value $1 enable)" = 1 ] || return 0

	procd_open_instance
	procd_set_param respawn
	procd_set_param stderr 1
	procd_set_param nice -5
	procd_set_param limits nofile="65535 65535"

	procd_set_param command /usr/bin/udp2raw

	# running mode
	local mode_val=$(get_value $1 mode client)
	local mode_param
	if [ "$mode_val" = "client" ]; then
		mode_param="-c"
	elif [ "$mode_val" = "server" ]; then
		mode_param="-s"
	else
		mode_param="-c"
	fi
	procd_append_param command "$mode_param"

	# common options
	append_param $1 local_address "-l"
	append_param $1 remote_address "-r"
	append_param_if_not_eq $1 raw_mode "--raw-mode" "faketcp"
	append_param_if_not_eq $1 key "--key" "secret key"
	append_param_if_not_eq $1 cipher_mode "--cipher-mode" "aes128cbc"
	append_param_if_not_eq $1 auth_mode "--auth-mode" "md5"
	procd_append_param command "-a"

	# other options
	append_param_if_not_eq $1 log_level "--log-level" "4"
	append_param_if_not_eq $1 mtu_warn "--mtu-warn" "1375"
	procd_append_param command "--wait-lock"

	# hb mode
	append_param_if_not_eq $1 hb_mode "--hb-mode" "1"
	[ "$(get_value $1 hb_mode 1)" = 1 ] && {
		append_param_if_not_eq $1 hb_len "--hb-len" "1200"
	}

	procd_close_instance
}

start_service() {
	config_load udp2raw
	config_foreach start_udp2raw udp2raw
}
